server:
  port: 9010
  servlet:
    encoding:
      charset: UTF-8
      enabled: true
      force: true

spring:
  application:
    name: user-server

  data:
    redis:
      port: 6379
      host: redis

  kafka:
    bootstrap-servers: kafka:9092

    topic:
      channel-chat-event: "channelChatEvent"
      dm-chat-event: "dmChatEvent"
      connection-event: "connectionEvent"
      presence-event: "presenceEvent"
      notification-event: "notificationEvent"
      server-event: "serverEvent"
      channel-event: "channelEvent"
      member-event: "memberEvent"

    producer:
      bootstrap-servers: kafka:9092

    consumer:
      group-id:
        channel-chat-event: "${spring.application.name}-channelChatEventGroup-${INSTANCE_ID}"
        dm-chat-event: "${spring.application.name}-dmChatEventGroup-${INSTANCE_ID}"
        notification-event: "${spring.application.name}-notificationEventGroup-${INSTANCE_ID}"
        server-event: "${spring.application.name}-serverEventGroup-${INSTANCE_ID}"
        channel-event: "${spring.application.name}-channelEventGroup-${INSTANCE_ID}"
        connection-event: "${spring.application.name}-connectionEventGroup-${INSTANCE_ID}"
        presence-event: "${spring.application.name}-presenceEventGroup-${INSTANCE_ID}"
        member-event: "${spring.application.name}-memberEventGroup-${INSTANCE_ID}"


      enable-auto-commit: true
      auto-offset-reset: latest

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${DB_HOST}:${DB_PORT}/${DB_DATABASE}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}

  jpa:
    hibernate:
      ddl-auto: create # 운영 시에 none 변경
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect

springdoc:
  path: /swagger-ui/index.html
  swagger-ui:
    tags-sorter: alpha
    operations-sorter: method

logging:
  level:
    org:
      springframework:
        jdbc: DEBUG # 운영 시에 WARN 변경
    org.apache.kafka: WARN
    org.springframework.kafka: WARN

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://discovery-server:8761/eureka
  instance:
    instance-id: ${spring.cloud.client.ip-address}:${spring.application.instance_id:${random.value}}

eas:
  passport:
    secretKey: ${PASSPORT_SECRET_KEY}
    expiration: ${PASSPORT_EXPIRATION}
    header: ${PASSPORT_HEADER}
    algorithm: ${PASSPORT_ALGORITHM}

auth:
  server:
    url: ${AUTH_SERVER_URL}
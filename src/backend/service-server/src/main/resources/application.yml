server:
  port: 9020
  servlet:
    encoding:
      charset: UTF-8
      enabled: true
      force: true

spring:
  application:
    name: service-server
  datasource:
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_DATABASE}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: create-drop # 운영 시에 none 변경
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect

  data:
    redis:
      port: 6379
      host: redis

    kafka:
      bootstrap-servers: kafka:9092

      topic:
        channel-chat-event: "channelChatEvent"
        dm-chat-event: "dmChatEvent"
        connection-event: "connectionEvent"
        presence-event: "presenceEvent"
        notification-event: "notificationEvent"
        server-event: "serverEvent"
        channel-event: "channelEvent"
        member-event: "memberEvent"

      producer:
        bootstrap-servers: kafka:9092

      consumer:
        group-id:
          channel-chat-event: "channelChatEventGroup"
          dm-chat-event: "dmChatEventGroup"
          notification-event: "notificationEventGroup"
          server-event: "serverEventGroup"
          channel-event: "channelEventGroup"
          connection-event: "connectionEventGroup"
          presence-event: "presenceEventGroup"
          member-event: "memberEventGroup"

        enable-auto-commit: true
        auto-offset-reset: latest

logging:
  level:
    org:
      springframework:
        jdbc: DEBUG # 운영 시에 WARN 변경

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://discovery-server:8761/eureka
  instance:
    instance-id: ${spring.cloud.client.ip-address}:${spring.application.instance_id:${random.value}}

springdoc:
  path: /swagger-ui/index.html
  swagger-ui:
    tags-sorter: alpha
    operations-sorter: method

eas:
  passport:
    secretKey: ${PASSPORT_SECRET_KEY}
    expiration: ${PASSPORT_EXPIRATION}
    header: ${PASSPORT_HEADER}
    algorithm: ${PASSPORT_ALGORITHM}

auth:
  server:
    url: ${AUTH_SERVER_URL}

service:
  server:
    url: ${SERVICE_SERVER_URL}
server:
  port: 8080

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://discovery-server:8761/eureka

spring:
  application:
    name: apigateway-server
  main:
    web-application-type: reactive # WebFlux + Spring Web 함께 사용

  cloud:
    gateway:
      globalcors:
        cors-configurations:
          '[/**]': # 모든 요청에 대해 CORS 적용
            allowedOrigins:
              - "https://bbebig.netlify.app"
              - "https://specially-mighty-titmouse.ngrok-free.app"
              - "http://localhost:5173"
              - "http://localhost:5174"
              - "http://localhost:5175"
              - "http://localhost:5176"
            allowedMethods:
              - GET
              - POST
              - PUT
              - PATCH
              - DELETE
              - OPTIONS
            allowedHeaders: "*"
            exposedHeaders: "*"
            allowCredentials: true

      discovery:
        locator:
          enabled: false
          lower-case-service-id: true # serviceId를 소문자로 관리

      routes:
        # Auth Server 라우팅
        - id: auth-server-public
          uri: lb://auth-server
          predicates:
            - Path=/auth-server/auth/login,/auth-server/auth/register,/auth-server/auth/health-check,/auth-server/auth/mobile-login
          filters:
            - StripPrefix=1

        - id: auth-server
          uri: lb://auth-server
          predicates:
            - Path=/auth-server/**
          filters:
            - name: PassportFilter
            - StripPrefix=1

        # User Server 라우팅
        - id: user-server
          uri: lb://user-server
          predicates:
            - Path=/user-server/**
          filters:
            - name: PassportFilter
            - StripPrefix=1

        # Service Server 라우팅
        - id: service-server
          uri: lb://service-server
          predicates:
            - Path=/service-server/**
          filters:
            - name: PassportFilter
            - StripPrefix=1

        - id: service-server-health-check
          uri: lb://service-server
          predicates:
            - Path=/service-server/utils/health
          filters:
            - StripPrefix=1

        # Search Server 라우팅
        - id: search-server
          uri: lb://search-server
          predicates:
            - Path=/search-server/**
          filters:
            - name: PassportFilter
            - StripPrefix=1

        # 상태관리 서버(State Management Server)
        - id: state-server
          uri: lb://state-server
          predicates:
            - Path=/state-server/**
          filters:
            - name: PassportFilter
            - StripPrefix=1

        # 채팅 서버(Chat Server)
        - id: chat-server
          uri: lb://chat-server
          predicates:
            - Path=/chat-server/**
          filters:
            - name: PassportFilter
            - StripPrefix=1

        # 채팅 서버 소켓(Chat Server Socket)
        - id: chat-server-socket
          uri: lb://chat-server
          predicates:
            - Path=/ws-chat/**

        # 푸시 서버(Push Server)
        - id: push-server
          uri: lb://push-server
          predicates:
            - Path=/push-server/**
          filters:
            - name: PassportFilter
            - StripPrefix=1

        # 시그널링 서버(Signaling Server)
        - id: signaling-server
          uri: lb://signaling-server
          predicates:
            - Path=/signaling-server/**
          filters:
            - StripPrefix=1

        # 시그널링 서버(Signaling Server)
        - id: signaling-server-socket
          uri: lb://signaling-server
          predicates:
            - Path=/ws-stream/**

        # 미디어 서버(Kurento Server)
        - id: kurento-server
          uri: lb://kurento-server
          predicates:
            - Path=/kurento-server/**
          filters:
            - StripPrefix=1

eas:
  passport:
    secret: ${PASSPORT_SECRET_KEY}
    expiration: ${PASSPORT_EXPIRATION}
    header: ${PASSPORT_HEADER}
    algorithm: ${PASSPORT_ALGORITHM}

passport:
  server:
    url: ${PASSPORT_SERVER_URL}